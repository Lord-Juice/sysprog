paul@pauls:~/htwg/semester2/syprog/aufgabe2$ javac Bubblesort.java
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ java Bubblesort 10
Bitte 10 ganze Zahlen eingeben: 3
21
5432
432
55
-1
123
5
23443
234
Sortierte Zahlenfolge: 
-1
3
5
21
55
123
234
432
5432
23443
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ make
gcc -g -Wall -Wextra -Werror -Wvla -std=c11 -pedantic    bubblesort.c   -o bubblesort
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ ./bubblesort 10
Bitte 10 ganze Zahlen eingeben: 893021
1290
390
319
1902 
938291083
1298031
-1321321
321
-3
Sortierte Zahlenfolge:
-1321321
-3
319
321
390
1290
1902
893021
1298031
938291083
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ valgrind ./bubblesort 10
==75939== Memcheck, a memory error detector
==75939== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==75939== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==75939== Command: ./bubblesort 10
==75939== 
Bitte 10 ganze Zahlen eingeben: 89234
2390
23480923
23849028
3248920482908409
4385903
238940
54398
239
32
Sortierte Zahlenfolge:
32
239
2390
54398
89234
238940
4385903
23480923
23849028
1061783801
==75939== 
==75939== HEAP SUMMARY:
==75939==     in use at exit: 0 bytes in 0 blocks
==75939==   total heap usage: 3 allocs, 3 frees, 2,088 bytes allocated
==75939== 
==75939== All heap blocks were freed -- no leaks are possible
==75939== 
==75939== For lists of detected and suppressed errors, rerun with: -s
==75939== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ make cppcheck
cppcheck --enable=warning,style --std=c11 bubblesort.c
Checking bubblesort.c ...
bubblesort.c:18:26: style: Parameter 'argv' can be declared as const array [constParameter]
int main(int argc, char *argv[]){
                         ^
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ ./bubblesort 1000 < dev/null | tail -1000 > out.txt
bash: dev/null: No such file or directory
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ ./bubblesort 1000 < /dev/null | tail -1000 > out.txt
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ sort -n out.txt | diff - out.txt
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ time java Bubblesort 1000 < /dev/null > /dev/null

real	0m0.082s
user	0m0.085s
sys	0m0.040s
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ time ./bubblesort 1000 < /dev/null > /dev/null

real	0m0.002s
user	0m0.001s
sys	0m0.001s
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ time ./bubblesort 10000 < /dev/null > /dev/null

real	0m0.087s
user	0m0.087s
sys	0m0.000s
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ time ./bubblesort 100000 < /dev/null > /dev/null

real	0m18.511s
user	0m18.482s
sys	0m0.001s
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ time java Bubblesort 10000 < /dev/null > /dev/null

real	0m0.152s
user	0m0.437s
sys	0m0.077s
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ time java Bubblesort 100000 < /dev/null > /dev/null

real	0m9.866s
user	0m10.090s
sys	0m0.105s
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ make "CC=gcc -g -O2" clean all
rm -f bubblesort bubblesort.o
gcc -g -O2 -Wall -Wextra -Werror -Wvla -std=c11 -pedantic    bubblesort.c   -o bubblesort
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ time ./bubblesort 10000 < /dev/null > /dev/null

real	0m0.163s
user	0m0.162s
sys	0m0.001s
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ time ./bubblesort 100000 < /dev/null > /dev/null

real	0m22.439s
user	0m22.438s
sys	0m0.001s
paul@pauls:~/htwg/semester2/syprog/aufgabe2$ 

